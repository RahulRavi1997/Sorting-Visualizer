{"version":3,"sources":["components/Slider.jsx","components/Bar.jsx","algorithms/selectionsort.js","algorithms/bubblesort.js","algorithms/insertionsort.js","algorithms/quicksort.js","containers/Sorter.jsx","actions/index.js","containers/Controls.jsx","reducers/barSizeReducer.js","reducers/index.js","containers/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["Slider","this","props","name","disabled","value","onChange","values","className","type","max","size","e","target","React","Component","total","color","style","height","width","marginLeft","marginRight","backgroundColor","selectionsort","array","sortObj","iteration","selectedIteration","leastIndex","leastValue","completed","length","console","error","newArray","arr","first_Index","second_Index","temp","swap","Number","MAX_VALUE","swappers","newSortObj","bubbleSort","stop","i","j","len","doSort","insertionSort","pivot","partitionCompleted","currentValue","quickSort","items","nextLeftIter","nextRightIter","pivoti","pivotj","currentPartition","pivots","newiteration","isCompleted","newBounds","left","right","sortedObj","newLeft","newRight","newPivot","newPivoti","newPivotj","newCurrentPartition","newPivots","slice","push","sort","Sorter","createBars","barSizes","sortType","elementbars","indexOf","Bar","key","state","timeoutID","nextProps","sorting","paused","speed","quicksort","insertionsort","bubblesort","log","window","clearTimeout","sortSpeed","setSorting","setState","setBarSizes","setTimeout","defaultProps","connect","barSizesReducer","dispatch","Controls","val","bars","resetBarSizes","toLowerCase","selectSort","currentTarget","setPaused","autoFocus","onClick","aria-hidden","Array","from","Math","floor","random","initialSortObj","innerIteration","initialState","combineReducers","action","Layout","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","App1","App","basename","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c06f8031.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nclass Slider extends React.Component {\n    render() {\n        const { name, disabled, value, onChange, values } = this.props;\n        return (\n            <div className={`slide slide${name}`}>\n                <input type=\"range\" disabled={disabled} className=\"slider\" max={this.props.size} value={value} onChange={(e) => {onChange(name, e.target.value)}}/>\n                <div className=\"level\">\n                    <div>{values[0]}</div>\n                    <div>{values[1]}</div>\n                    <div>{values[2]}</div>\n                </div>\n            <p>{name}</p>\n            </div>\n        );\n    }\n}\n\nexport default Slider;\n","import React from 'react';\nimport '../App.css';\n\nclass Slider extends React.Component {\n    render() {\n        const { size, total, color } = this.props;\n        \n        return (\n            <div className={\"bars\"} style={ { height: 10*size+5 , width: 1000/total, marginLeft: 100/total, marginRight: 100/total, backgroundColor: color} }>\n                <div className=\"shadow\" />\n            </div>\n        );\n    }\n}\n\nexport default Slider;\n","function swap(arr, first_Index, second_Index) {\n    var temp = arr[first_Index];\n    arr[first_Index] = arr[second_Index];\n    arr[second_Index] = temp;\n    return arr;\n}\nfunction selectionsort(array, sortObj) {\n    var { iteration, selectedIteration, leastIndex, leastValue } = sortObj;\n    var completed = false;\n    if (iteration > array.length) {\n        console.error(\"Error in selection sort. Max length exceeded!\");\n        completed=true;\n    }\n    var newArray = array;\n    if (iteration == array.length-1 || array.length === 1) {\n        completed = true;\n    } else {\n        if (selectedIteration > array.length) {\n            if (leastIndex != iteration) {\n                newArray = swap(newArray, iteration, leastIndex);\n            }\n            iteration++;\n            selectedIteration = iteration;\n            leastValue = Number.MAX_VALUE;\n            leastIndex = Number.MAX_VALUE;\n        } else {\n            if (array[selectedIteration] < leastValue) {\n                leastValue = array[selectedIteration];\n                leastIndex = selectedIteration;\n            }\n            selectedIteration++;\n        }\n    }\n    return {\n        newArray,\n        completed,\n        swappers: [leastIndex, iteration],\n        newSortObj: {\n            iteration,\n            selectedIteration,\n            leastIndex,\n            leastValue\n        }\n    };\n}\n\nexport default selectionsort;\n","function doSort(arr, sortObj) {\n    var { iteration: i, selectedIteration: j } = sortObj;\n    var len = arr.length, stop, completed = false;\n    for (stop = len - i; j < stop; j++) {\n        if (arr[j] > arr[j + 1]) {\n            swap(arr, j, j + 1);\n            return { newArray: arr, swappers: [j, j + 1], iteration: i, selectedIteration: j };\n        }\n    }\n    if (i == len - 1) {\n        completed = true;\n    }\n    i++;\n    j = 0;\n    return { newArray: arr, completed, swappers: [j, j + 1], iteration: i, selectedIteration: j };\n}\nfunction swap(arr, first_Index, second_Index) {\n    var temp = arr[first_Index];\n    arr[first_Index] = arr[second_Index];\n    arr[second_Index] = temp;\n}\n\nfunction bubbleSort(array, sortObj) {\n    if (sortObj.iteration > array.length) {\n        console.error(\"Error in bubble sort. Max length exceeded!\");\n        return {\n            array,\n            completed: true,\n            swappers: [],\n            newSortObj: {\n                iteration: 0,\n                selectedIteration: 0,\n            }\n        };\n    }\n    const { newArray, completed, swappers, iteration, selectedIteration } = doSort(array, sortObj);\n    return {\n        newArray,\n        completed,\n        swappers,\n        newSortObj: {\n            iteration: iteration,\n            selectedIteration: selectedIteration\n        }\n    };\n}\n\nexport default bubbleSort;\n","function insertionSort(array, sortObj) {\n    var { iteration, selectedIteration, partitionCompleted } = sortObj;\n    var completed = false;\n    var newArray = array;\n    var pivot;\n    let j = selectedIteration == null ? (iteration - 1) :  selectedIteration;\n    if (iteration < array.length) {\n        let currentValue = array[iteration];\n        if (!partitionCompleted) {\n            if (j >= 0 && currentValue < newArray[j]) {\n                j--;\n            } else {\n                partitionCompleted = true;\n                pivot = j;\n            }\n        } else {\n            j = iteration - 1;\n            while (j >= 0 && currentValue < newArray[j] ) {\n                newArray[j + 1] = array[j];\n                j--;\n            }\n            newArray[j + 1] = currentValue;\n            iteration++;\n            j = null;\n            pivot = null;\n            partitionCompleted = false;\n        }\n    } else {\n        completed = true;\n    }\n    return {\n        newArray,\n        completed,\n        swappers: [iteration, j+1],\n        newSortObj: {\n            iteration,\n            pivot,\n            selectedIteration: j,\n            partitionCompleted\n        }\n    };\n}\nexport default insertionSort;","function doSort(items, left, right, pivot, pivoti, pivotj) {\n    pivot = pivot == null ? items[left] : pivot;\n    var i = pivoti == null ? left : pivoti;\n    var j = pivotj == null ? right : pivotj;\n    while (i <= j) {\n        while (items[i] < pivot) {\n            i++;\n            return { items, pivot, pivoti: i, pivotj: j, partitionCompleted: false };\n        }\n        while (items[j] > pivot) {\n            j--;\n            return { items, pivot, pivoti: i, pivotj: j, partitionCompleted: false };\n        }\n        if (i <= j) {\n            items = swap(items, i, j);\n            i++;\n            j--;\n            return { items, pivot, pivoti: i, pivotj: j, partitionCompleted: false };\n        }\n    }\n    return { items, pivot, pivoti: i, pivotj: null, partitionCompleted: true };\n}\n\nfunction quickSort(items, iteration, nextLeftIter, nextRightIter, pivot, pivoti, pivotj, currentPartition, pivots) {\n    var completed;\n    var newiteration = iteration;   \n    if (items.length <= 1) {\n        return {\n            newArray: items,\n            isCompleted: true\n        };\n    }\n    if ((nextLeftIter.length > 0) || (nextRightIter.length > 0)) {\n        var newBounds;\n        if (currentPartition == null) {\n            if (nextLeftIter.length > 0) {\n                currentPartition = \"left\";\n                newBounds = nextLeftIter[0];\n            } else {\n                currentPartition = \"right\";\n                newBounds = nextRightIter[0];\n            }\n        } else {\n            newBounds = currentPartition === \"left\" ? nextLeftIter[0] : nextRightIter[0];\n        }\n        const { left, right } = newBounds;\n        var sortedObj = doSort(items, left, right, pivot, pivoti, pivotj);\n        pivot = sortedObj.pivot;\n        pivoti = sortedObj.pivoti;\n        pivotj = sortedObj.pivotj;\n        items = sortedObj.items;\n        if (!sortedObj.partitionCompleted) {\n            return {\n                newArray: items,\n                swappers: [pivoti, pivotj],\n                isCompleted: false,\n                newiteration,\n                newLeft: nextLeftIter,\n                newRight: nextRightIter,\n                newPivot: pivot,\n                newPivoti: pivoti,\n                newPivotj: pivotj,\n                newCurrentPartition: currentPartition,\n                newPivots: pivots\n            };\n        }\n        if (currentPartition === \"left\") {\n            nextLeftIter = nextLeftIter.slice(1);\n        } else if (currentPartition === \"right\") {\n            nextRightIter = nextRightIter.slice(1);\n        }\n        if (left < pivoti - 1) {\n            nextLeftIter.push({ left, right: pivoti - 1 });\n        }\n        if (pivoti < right) {\n            nextRightIter.push({ left: pivoti, right });\n        }\n        pivots.push(pivoti);\n        newiteration++;\n    } else {\n        completed = true;\n    }\n    return {\n        newArray: items,\n        swappers: [],\n        isCompleted: completed,\n        newiteration,\n        newLeft: nextLeftIter,\n        newRight: nextRightIter,\n        newPivot: null,\n        newPivoti: null,\n        newPivotj: null,\n        newCurrentPartition: null,\n        newPivots: pivots\n    };\n}\n\nfunction sort(array, sortObj) {\n    const { iteration, nextLeftIter, nextRightIter, pivot, pivoti, pivotj, currentPartition, pivots } = sortObj;\n    const { newArray, isCompleted, newiteration, newLeft, newRight, newPivot, newPivoti, newPivotj, newCurrentPartition, newPivots, swappers } =\n        quickSort(array, iteration, nextLeftIter || [{ left: 0, right: array.length - 1 }], nextRightIter || [], pivot, pivoti, pivotj, currentPartition, pivots);\n    return {\n        newArray,\n        completed: isCompleted,\n        swappers: [],\n        newSortObj: {\n            iteration: newiteration,\n            selectedIteration: 0,\n            nextLeftIter: newLeft,\n            nextRightIter: newRight,\n            pivot: newPivot,\n            pivoti: newPivoti,\n            pivotj: newPivotj,\n            currentPartition: newCurrentPartition,\n            pivots: newPivots\n        }\n    };\n}\nfunction swap(arr, first_Index, second_Index) {\n    var temp = arr[first_Index];\n    arr[first_Index] = arr[second_Index];\n    arr[second_Index] = temp;\n    return arr;\n}\n\nexport default sort;\n","\nimport React from 'react';\nimport Bar from \"./../components/Bar\";\nimport { setBarSizes } from '../actions/index';\nimport { connect } from 'react-redux'\nimport '../App.css';\nimport selectionsort from '../algorithms/selectionsort';\nimport bubblesort from '../algorithms/bubblesort';\nimport insertionsort from \"../algorithms/insertionsort\";\nimport quicksort from '../algorithms/quicksort';\n\nclass Sorter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeoutID: null,\n      swappers: []\n    };\n  }\n  \n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { sorting, paused, speed, sortType, barSizes: array, sortObj } = nextProps;\n    const sort =\n      sortType === \"quick\" ? quicksort :\n        sortType === \"insertion\" ? insertionsort :\n          sortType === \"selection\" ? selectionsort :\n            sortType === \"bubble\" ? bubblesort : null;\n    if (null === sort) {\n      console.error('unknown sorting method! ->', sortType);\n      return;\n    }\n    if ((sorting && !this.props.sorting) || (sorting && !paused && this.props.paused)) {\n      console.log('startSorting', this.props.iteration);\n      this.doSort(sort, speed, sortType, array, sortObj);\n    } else if (!sorting || paused) {\n      console.log('stopSorting');\n      if (!paused) {\n        this.state.swappers = []; // TODO: work around mutating state\n      }\n      window.clearTimeout(this.state.timeoutID);\n    }\n  }\n\n  doSort(sort, speed, sortType, array, sortObj) {\n    var sortSpeed = Number(speed) === 0 ? 500 : (Number(speed) === 1 ? 250 : 50);\n    const { newArray, completed, swappers, newSortObj } = sort(array, sortObj);\n    if (!completed) {\n      var timeoutID = setTimeout(() => this.doSort(sort, speed, sortType, array, newSortObj), sortSpeed);\n      this.setState({\n        timeoutID,\n        swappers\n      });\n      this.props.setBarSizes(newArray, newSortObj);\n    } else {\n      this.props.setSorting(false);\n      this.setState({\n        swappers: [],\n        timeoutID: null\n      });\n      this.props.setBarSizes(newArray, 0);\n    }\n  }\n\n  createBars = (barSizes, swappers, sortType, sortObj) => {\n    var iteration, selectedIteration;\n    if (sortObj) {\n      iteration = sortObj.iteration;\n      selectedIteration = sortObj.selectedIteration;\n      iteration = sortObj.iteration;\n    }\n    var elementbars = [];\n    for (var i = 0; i < barSizes.length; i++) {\n      var color = \"#9e9e9e\";\n      if (sortType === \"selection\") {\n        if (i < iteration) {\n          color = \"#5580af\";\n        }\n        if (i == selectedIteration) {\n          color = \"#5f5f5f\";\n        }\n      } else if (sortType === \"bubble\" && i >= (barSizes.length - iteration)) {\n        color = \"#5580af\";\n      } else if (sortType === \"quick\") {\n        if (sortObj.pivoti === i) {\n          color = \"#5f5f5f\";\n        }\n        if (sortObj.pivotj === i) {\n          color = \"#5f5f5f\";\n        }\n        if (sortObj.pivots && sortObj.pivots.length > 0 && sortObj.pivots.indexOf(i) !== -1) {\n          color = \"#5580af\";\n        }\n        // if (sortObj.pivot === i) {\n        //   color = \"#ff50507d\";\n        // }\n      } \n      if ((swappers[0] && swappers[0] === i) || (swappers[1] && swappers[1] === i)) {\n        color = \"#007bff80\";\n      }\n      elementbars.push(<Bar size={barSizes[i]} key={i} total={barSizes.length} color={color} />);\n    }\n    return elementbars;\n  }\n\n  render() {\n    const { barSizes, sortType, sortObj } = this.props;\n    const { swappers } = this.state;\n    return (\n      <div className=\"sorter\">\n        <div className=\"barswrapper\">\n          {this.createBars(barSizes, swappers, sortType, sortObj )}\n        </div>\n      </div>\n    );\n  }\n}\n\nSorter.defaultProps = {\n};\n\nconst mapStateToProps = state => {\n  return {\n    barSizes: state.barSizesReducer.barSizes,\n    sortObj: state.barSizesReducer.sortObj\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setBarSizes: (barSizes, sortObj) => { dispatch(setBarSizes(barSizes, sortObj)) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Sorter);","export const resetBarSizes = length => ({\n  type: 'RESET_BAR_SIZES',\n  length\n})\nexport const setBarSizes = (barSizes, sortObj) => ({\n    type: 'SET_BAR_SIZES',\n    barSizes,\n    sortObj\n  })\nexport const barSizeActions = {\n  RESET_BAR_SIZES: 'RESET_BAR_SIZES',\n  SET_BAR_SIZES: 'SET_BAR_SIZES',\n}","\nimport React from 'react';\nimport { connect } from 'react-redux'\nimport { resetBarSizes } from '../actions/index';\nimport '../App.css';\nimport Slider from '../components/Slider';\nimport Sorter from './Sorter';\n\nclass Controls extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speed: 1,\n      bars: 10,\n      sortType: \"selection\",\n      sorting: false,\n      paused: false\n    }\n  }\n\n  onChange = (name, value) => {\n    var val = value;\n    if (val !== this.state.bars) {\n      if (name === \"Bars\") {\n        val = (Number(value) === Number(0)) ? 1 : value;\n        this.props.resetBarSizes(val);\n      }\n    }\n    this.setState({\n      [name.toLowerCase()]: val\n    });\n  }\n\n  selectSort = (e) => {\n    this.setState({\n      sortType: e.currentTarget.value\n    });\n  }\n  setSorting = (sorting) => {\n    this.setState({\n      sorting,\n      paused: false\n    });\n  }\n\n  setPaused = (paused) => {\n    this.setState({\n      paused\n    });\n  }\n\n  render() {\n    const { sortType, sorting, paused, speed, bars } = this.state;\n    const { barSizes } = this.props;\n    console.log(sorting, paused, sorting && (!paused));\n    return (\n      <div className=\"controls-wrapper\">\n        <Sorter sortType={sortType} sorting={sorting} paused={paused} speed={speed} bars={bars} barSizes={barSizes} setSorting={this.setSorting} />\n        <div className=\"controls\" >\n          <Slider name={\"Speed\"} value={speed} disabled={sorting && (!paused)} onChange={this.onChange} values={[\"Slow\", \"Medium\", \"Fast\"]} size={2} />\n          <Slider name={\"Bars\"} value={bars} disabled={sorting && (!paused)} onChange={this.onChange} values={[0, 50, 100]} size={100} />\n          <div className=\"sortbuttons\">\n            <button className={`btn btn-default sort-type ${sortType === \"selection\" ? \"active\" : \"\"}`} disabled={sorting} autoFocus value=\"selection\" onClick={this.selectSort}>Selection Sort</button>\n            <button className={`btn btn-default sort-type ${sortType === \"bubble\" ? \"active\" : \"\"}`} disabled={sorting} value=\"bubble\" onClick={this.selectSort}>Bubble Sort</button>\n            <button className={`btn btn-default sort-type ${sortType === \"quick\" ? \"active\" : \"\"}`} disabled={sorting} value=\"quick\" onClick={this.selectSort}>Quick Sort</button>\n            <button className={`btn btn-default sort-type ${sortType === \"insertion\" ? \"active\" : \"\"}`} disabled={sorting} value=\"insertion\" onClick={this.selectSort}>Insertion Sort</button>\n\n            <div className=\"row m-0 mt-3\">\n              <div className=\"col-6\">\n                <button className=\"btn btn-primary sort\" disabled={sorting} onClick={() => { this.setSorting(true) }}> Sort</button>\n              </div>\n              <div className=\"col-3\">\n                <button className=\"btn btn-primary sort\" disabled={!sorting} onClick={() => { this.setPaused(!paused) }}>\n                  <i className={`fa ${paused ? \"fa-play\" : \"fa-pause\"}`} aria-hidden=\"true\"></i></button>\n              </div>\n              <div className=\"col-3\">\n                <button className=\"btn btn-primary sort\" onClick={() => { this.setSorting(false); this.props.resetBarSizes(bars) }}>\n                  <i className=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nControls.defaultProps = {\n  barSizes: Array.from({ length: 50 }, () => Math.floor(Math.random() * 50))\n};\n\nconst mapStateToProps = state => {\n  return {\n    barSizes: state.barSizesReducer.barSizes\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetBarSizes: length => { dispatch(resetBarSizes(length)) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);","const initialSortObj = {\n  iteration: 0,\n  innerIteration: 0,\n  selectedIteration: 0,\n  leastIndex: Number.MAX_VALUE,\n  leastValue: Number.MAX_VALUE,\n  partitionCompleted: false,\n  nextLeftIter: null,\n  nextRightIter: null,\n  pivoti: null,\n  pivotj: null,\n  currentPartition: null,\n  pivot: null,\n  pivots: []\n}\nconst initialState = {\n  barSizes: Array.from({ length: 10 }, () => Math.floor(Math.random() * 50)),\n  sortObj: initialSortObj\n}\nconst barSizesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RESET_BAR_SIZES':\n      var barSizes = Array.from({ length: action.length }, () => Math.floor(Math.random() * 50));\n      return {\n        ...state,\n        barSizes,\n        sortObj: initialSortObj\n      }\n    case 'SET_BAR_SIZES':\n      return {\n        ...state,\n        barSizes: action.barSizes,\n        sortObj: action.sortObj\n      }\n    default:\n      return state\n  }\n}\nexport {\n  barSizesReducer\n}","import { combineReducers } from 'redux'\nimport { barSizesReducer } from './barSizeReducer'\nexport default combineReducers({\n    barSizesReducer\n})","\nimport React from 'react';\nimport '../App.css';\nimport Controls from './Controls';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from '../reducers'\n\nfunction Layout() {\n  const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n   );\n  return (\n    <Provider store={store}>\n      <div className=\"layout\">\n        <Controls />\n      </div>\n    </Provider>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './containers/Layout';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"folder1\">\n          <Route exact path=\"/\"  component={App1} />\n    </BrowserRouter>\n  )\n}\n  function App1() {\n  return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          Sorting Visualizer\n      </header>\n        <Layout />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}